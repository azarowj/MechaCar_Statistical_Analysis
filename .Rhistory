install.packages("tidyverse")
install.packages("jsonlite")
setwd("~/Desktop/Columbia Bootcamp/Module 15 Stats and R/R_Analysis")
setwd("~/Desktop/Columbia Bootcamp/Module 15 Stats and R/R_Analysis/01_Demo")
x<-3
x<-5
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
?read.csv
demo_table <- read.csv(file='demo.csv', chek.names=F, stringsAsFactors = F)
demo_table <-read.csv(file='demo.csv', check.names = F, stringsAsFactors = F)
View(demo_table)
library(jsonlite)
?fromJSON()
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table2)
?subset()
?sample()
library(tidyverse)
?mutate()
?gather()
demo_table3 <- read.csv('demo2.csv', check.names = F, stringsAsFactors = F)
View(demo_table3)
long_table <- gather(demo_table3, key = "Metric", value = "Score", buying_price:popularity)
View(long_table)
View(long_table)
View(long_table)
View(long_table)
View(demo_table3)
View(long_table)
?spread()
?spread()
?ggplot()
head(mpg)
plt <- ggplot(mpg, aes(x=class))
plt + geom_bar()
?geom_bar()
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=manufacturer, y=Vehicle_Count))
plt + geom_col()
plt + geom_col + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset")
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset")
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
mpg_summary <- subset(mpg, manufacturer == "toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy = mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=cyl, y=Mean_Hwy))
View(mpg_summary)
plt + geom_line()
plt _ geom_line() + scale_x_discrete(limits=c(4, 6, 8)) + scale_y_continuous(breaks = c(15:30))
plt + geom_line() + scale_x_discrete(limits=c(4, 6, 8)) + scale_y_continuous(breaks = c(15:30))
plt <- ggplot(mpg, aes(x=displ, y=cty))
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG")
plt <- ggplot(mpg, aes(x=displ, y=cty, color=class))
plt + geom_point() labs(x= "Engine Size (L)", y= "City Fuel-Efficiency (MPG)", color = "Vehicle Class")
plt + geom_point() + labs(x="Engine Size(L)", y="City Fuel-Efficiency (MPG)", color = "Vehicle Class")
plt <- ggplot(mpg, aes(x=displ, y=cty, color=class, shape=drv))
plt + geom_point() + labs(x="Engine Size (L)", y="Fuel-Efficiency (MPG), color="Vehicle Class", shape="Type of Drive")
plt + geom_point() +labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class", shape="Type of Drive")
\
plt <- ggplot(mpg, aes(y=hwy))
plt + geom_boxplot()
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy))
plt +geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=class, y=factor(year), fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class", y="Vehicle Year",fill = "Mean Highway(MPG)")
mpg_summary <- mpg %>% group_by(model, year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=model, y=factor(year), fill=Mean_Hwy))
plt + geom_tile() +labs(x="Model", y="Vehicle Year", fill="Mean Highway (MPG)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy))
plt + geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_point()
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=class, y=Mean_Engine))
plt + geom_point(size=4) +labs(x="Vehicle Class", y="Mean Engine Size")
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=class, y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vehicle Class", y="Mean Engine Size") +
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine, ymax=Mean_Engine+SD_Engine))
mpg_long <- mpg %>% gather(key="MPG_Type", value="Rating", c(cty,hwy))
head(mpg_long)
plt <- ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
?facet_wrap()
plt <- ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt + geom_boxplot() +facet_wrap(vars(MPG_Type)) +
theme(axix.text.x=element_text(angle = 45, hjust = 1), legend.position = "none") +xlab("Manufacturer")
plt + geom_boxplot() +facet_wrap(vars(MPG_Type)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none") +xlab("Manufacturer")
?shapiro.test()
shapiro.test(mtcars$wt)
?sample_n()
population_table <- read.csv('used_car_data.csv', check.names = F, stringsAsFactors = F)
plt <- ggplot(population_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
?t.test()
t.test(log10(sample_table$Miles_Driven), mu=mean(log10(population_table$Miles_Driven)))
sample_table <- population_table %>% sample_n(50)
sample_table2 <- population_table %>% sample_n(50)
t.test(log10(sample_table$Miles_Driven), log10(sample_table2$Miles_Driven))
mpg_data <- read.csv('mpg_modified.csv')
mpg_1999 <- mpg_data %>% filter(year==1999)
mpg_2008 <- mpg_data %>% filter (year==2008)
t.test(mpg_1999$hwy,mpg_2008$hwy, paired = T)
?aov()
mtcars_filt <- mtcars[,c("hp", "cyl")]
mtcars_filt$cyl <- factor(mtcars_filt$cyl)
aov(hp ~ cyl, data=mtcars_filt)
summary(aov(hp~cyl, data=mtcars_filt))
?cor()
head(mtcars)
plt <-ggplot(mtcars, aes(x=hp, y=qsec))
plt + geom_point()
cor(mtcars$hp,mtcars$qsec)
?lm()
lm(qsex ~ hp, mtcars)
lm(sqec~ hp, mtcars)
lm(qsec~hp, mtcars)
summary(lm(qsec~hp,mtcars))
model <- lm(qsec~hp,mtcars)
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)']
plt <- ggplot(mtcars,aes(x=hp,y=qsec))
plt +geom_point() +geom_line(aes(y-yvals), color = 'red')
plt + geom_point() + geom_line(aes(y=yvals), color="red")
lm(qsex~mpg+disp+drat+wt+hp, data=mtcars)
lm(qsec ~ mpg + disp + drat + wt + hp, data= mtcars)
summary(lm(qsec ~ mpg+disp+drat+wt+hp, data=mtcars))
?chisq.test()
table(mpg$class,mpg$year)
tbl <- table(mpg$class, mpg$year)
chisq.test(tbl)
setwd("~/Desktop/Columbia Bootcamp/Module 15 Stats and R/MechaCar_Statistical_Analysis")
library(dplyr)
mecha_table <- read.csv(file='MechaCar_mpg.csv', check.names = F, stringsAsFactors = F)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data= mecha_table)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data= mecha_table))
summary(lm(mpg~ vehicle_length + vehicle_weight + spoilder_angle + ground_clearance + AWD, data = mecha_table))
mecha_table <- read.csv(file='MechaCar_mpg.csv', check.names = F, stringsAsFactors = F)
suspension_table <- read.csv(file='Suspension_Coil.csv', check.names = F, stringsAsFactors = F)
?summarize()
total_summary <- suspension_table %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(total_summary)
lot_summary <- suspension_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(lot_summary)
ggplot(suspension_table,aex(x=PSI)) + geom_density()
ggplot(suspension_table, aes(x=PSI)) +geom_density()
t.test(suspension_table$PSI, mu=1500)
?t.test()
t.test(suspension_table$PSI, mu=1500, subset(suspension_table$Manufacturing_Lot=='Lot1'))
t.test(suspension_table$PSI, mu=1500, subset(suspension_table, suspension_table$Manufacturing_Lot == "Lot1"))
lot1 <- suspension_table %>% filter(Manufacturing_Lot=='Lot1')
lot2 <- suspension_table %>% filter(Manufacturing_Lot=='Lot2')
lot3 <- suspension_table %>% filter(Manufacturing_Lot=='Lot3')
t.test(lot1$PSI, mu=1500)
t.test(lot2$PSI, mu=1500)
t.test(lot3$PSI, mu=1500)
